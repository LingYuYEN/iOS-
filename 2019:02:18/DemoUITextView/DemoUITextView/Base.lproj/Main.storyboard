<?xml version="1.0" encoding="UTF-8"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="14460.31" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES" initialViewController="BYZ-38-t0r">
    <device id="retina4_7" orientation="portrait">
        <adaptation id="fullscreen"/>
    </device>
    <dependencies>
        <deployment identifier="iOS"/>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="14460.20"/>
        <capability name="Safe area layout guides" minToolsVersion="9.0"/>
        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
    </dependencies>
    <scenes>
        <!--View Controller-->
        <scene sceneID="tne-QT-ifu">
            <objects>
                <viewController id="BYZ-38-t0r" customClass="ViewController" customModule="DemoUITextView" customModuleProvider="target" sceneMemberID="viewController">
                    <view key="view" contentMode="scaleToFill" id="8bC-Xf-vdC">
                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <textView clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="scaleToFill" textAlignment="natural" translatesAutoresizingMaskIntoConstraints="NO" id="966-U9-dLv">
                                <rect key="frame" x="10" y="20" width="355" height="637"/>
                                <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
                                <string key="text">可能大家都有很多方法去產生亂數
但大家有沒有想過你們所產生的亂數是真正的亂數嗎？

以上述程式碼為例，是利用時間才產生亂數，所以才需要宣告#include &lt;time.h&gt;
在需要夠亂的程式，可能會加入更多的因素，而影響輸出的數字。
例如：賭埸的百家樂(電子版)，除了用時間作因子外，也可能加入觸碰螢幕的位置、人為的設定...等等

所以大家玩遊戲時，有聽某某人說：每分鐘的00秒時抽卡片，卡片會比較好。
或是：當有人抽到好卡片時，你也要馬上跟著抽，好運會滾滾來。
這證明它們的亂數，也並非真正的亂數。

可能你現在還是很疑惑，不就是亂數嗎？
我再舉一個例子：
在田莊中放一顆蘋果的種子，10年後，這個田莊可能會有很多顆樹，但這些樹都是蘋果樹
我們目前想要的是：在田莊中放一顆種子，10年後，田莊要長很多顆不同種類的樹

可能你會想，那你一開始就放多幾顆不同品種的種子。
這樣的做法，就好像在亂數中，參入更多的影響因子
這樣看似可行，但只要有人掌握了這些影響因子，這樣亂數就變成可預測的亂數了。可能大家都有很多方法去產生亂數
但大家有沒有想過你們所產生的亂數是真正的亂數嗎？

以上述程式碼為例，是利用時間才產生亂數，所以才需要宣告#include &lt;time.h&gt;
在需要夠亂的程式，可能會加入更多的因素，而影響輸出的數字。
例如：賭埸的百家樂(電子版)，除了用時間作因子外，也可能加入觸碰螢幕的位置、人為的設定...等等

所以大家玩遊戲時，有聽某某人說：每分鐘的00秒時抽卡片，卡片會比較好。
或是：當有人抽到好卡片時，你也要馬上跟著抽，好運會滾滾來。
這證明它們的亂數，也並非真正的亂數。

可能你現在還是很疑惑，不就是亂數嗎？
我再舉一個例子：
在田莊中放一顆蘋果的種子，10年後，這個田莊可能會有很多顆樹，但這些樹都是蘋果樹
我們目前想要的是：在田莊中放一顆種子，10年後，田莊要長很多顆不同種類的樹

可能你會想，那你一開始就放多幾顆不同品種的種子。
這樣的做法，就好像在亂數中，參入更多的影響因子
這樣看似可行，但只要有人掌握了這些影響因子，這樣亂數就變成可預測的亂數了。</string>
                                <fontDescription key="fontDescription" type="system" pointSize="14"/>
                                <textInputTraits key="textInputTraits" autocapitalizationType="sentences"/>
                                <connections>
                                    <outlet property="delegate" destination="BYZ-38-t0r" id="DDh-ZN-xZo"/>
                                </connections>
                            </textView>
                        </subviews>
                        <color key="backgroundColor" white="0.66666666666666663" alpha="1" colorSpace="custom" customColorSpace="genericGamma22GrayColorSpace"/>
                        <constraints>
                            <constraint firstItem="6Tk-OE-BBY" firstAttribute="trailing" secondItem="966-U9-dLv" secondAttribute="trailing" constant="10" id="1sL-Ow-KLV"/>
                            <constraint firstItem="966-U9-dLv" firstAttribute="leading" secondItem="6Tk-OE-BBY" secondAttribute="leading" constant="10" id="H8u-yk-jXO"/>
                            <constraint firstItem="6Tk-OE-BBY" firstAttribute="bottom" secondItem="966-U9-dLv" secondAttribute="bottom" constant="10" id="V8y-ub-N8z"/>
                            <constraint firstItem="966-U9-dLv" firstAttribute="top" secondItem="6Tk-OE-BBY" secondAttribute="top" id="lt5-nF-C4Y"/>
                        </constraints>
                        <viewLayoutGuide key="safeArea" id="6Tk-OE-BBY"/>
                    </view>
                    <connections>
                        <outlet property="constraint" destination="V8y-ub-N8z" id="1zd-ph-FZz"/>
                        <outlet property="textView" destination="966-U9-dLv" id="UVS-I1-tPV"/>
                    </connections>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="dkx-z0-nzr" sceneMemberID="firstResponder"/>
            </objects>
        </scene>
    </scenes>
</document>
